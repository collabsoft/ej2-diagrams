{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix } from '../primitives/matrix';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription) {\n        annotation.id = annotation.id || randomId();\n        var textele = new TextElement();\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.content = annotation.content;\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        textele.style.textOverflow = 'Wrap';\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        textElement.refreshTextElement();\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return nodes[i];\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = { x: x + element.actualSize.width / 2, y: y - 30 / diagram.scroller.currentZoom };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds, randomId } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        this.isRectElement = false;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        this.float = false;\n        this.floatingBounds = undefined;\n        this.id = randomId();\n    }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        //Private variables\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        get: function () {\n            return this.pathData;\n        },\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        _this.nodeId = '';\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the native element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'white', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        get: function () {\n            return this.textContent;\n        },\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        get: function () {\n            return this.textNodes;\n        },\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        get: function () {\n            return this.textWrapBounds;\n        },\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        get: function () {\n            return this.imageSource;\n        },\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    if (child.rotateAngle !== 0) {\n                        childSize = rotateSize(childSize, child.rotateAngle);\n                    }\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY, childSize);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                child.arrange(child.desiredSize);\n                this.outerBounds.uniteRect(child.outerBounds);\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y, childSize) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= childSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= childSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= childSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= childSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        _this.nodeId = '';\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content = new DiagramElement();\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if (this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = this.children ? new Container() : new Canvas();\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent = new TextElement();\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        var style = annotation.style;\n        var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n        annotationcontent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n            bold: style.bold, textWrapping: style.textWrapping,\n            color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n            fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n            textDecoration: link ? link.textDecoration || annotationcontent.hyperlink.textDecoration : style.textDecoration,\n        };\n        annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n        annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n        annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n        annotationcontent.content = link ? link.content || annotationcontent.hyperlink.link : annotation.content;\n        if (this.width !== undefined) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.offset = 0;\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.drawImage = function (canvas, obj) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX = obj.x + obj.width * obj.pivotX;\n            var pivotY = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            imageObj.onload = function () {\n                ctx_1.rotate(obj.angle * Math.PI / 180);\n                var image = new Image();\n                image.src = obj.source;\n                _this.image(ctx_1, image, obj.x, obj.y, obj.width, obj.height, obj);\n                ctx_1.rotate(-(obj.angle * Math.PI / 180));\n            };\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + element.parentTransform + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) {\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                canvas.appendChild(gElement);\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (nodeWidth >= 40 && nodeHeight >= 40) {\n            //Hide corners when the size is less than 40\n            if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n            }\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeWest) {\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeEast) {\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n        }\n    };\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            defs.appendChild(pattern);\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = 'transparent';\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg);\n    };\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true);\n            }\n        }\n    };\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, diff.x, diff.y, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && canOutConnect(args.target))\n                    || (this.endPoint === 'ConnectorTargetEnd' && canInConnect(args.target)))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    this.commandHandler.connect(this.endPoint, args);\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            if (obj.offsetX !== this.undoElement.offsetX || obj.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', changeObjectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            if (args.source instanceof Node) {\n                if (args.source.offsetX === this.undoElement.nodes[0].offsetX &&\n                    args.source.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(args.source.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(args.source.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (args.source.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                args.source.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (args.source) {\n            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n        }\n        var arg = {\n            source: args.source, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (args.source) {\n                oldValues_1 = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                newValues = {\n                    offsetX: args.source.wrapper.offsetX + snappedPoint.x,\n                    offsetY: args.source.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: args.source, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drawHighlighter(this.currentTarget);\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    RotateTool.prototype.mouseUp = function (args) {\n        if (this.undoElement.rotateAngle !== args.source.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.rotateAngle === args.source.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: this.currentElement.wrapper.offsetX, y: this.currentElement.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - this.currentElement.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        if (this.undoElement.offsetX !== args.source.wrapper.offsetX || this.undoElement.offsetY !== args.source.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, args.source);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.offsetX === args.source.wrapper.offsetX && this.undoElement.offsetY === args.source.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, args.source));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            changeObjectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            this.eventArgs.sourceWrapper instanceof TextElement) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target)) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        //end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === \"nudgeRight\" || i === \"nudgeDown\" || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element) {\n                                    if (obj instanceof Connector && diagram.bpmnModule) {\n                                        //    obj = diagram.bpmnModule.findInteractableObject(obj, diagram);\n                                    }\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canOutConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canInConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (actualTarget.parentId) {\n                    var obj = actualTarget;\n                    var selected = isSelected(diagram, obj);\n                    while (obj) {\n                        if (isSelected(diagram, obj) && !selected) {\n                            break;\n                        }\n                        actualTarget = obj;\n                        obj = diagram.nameTable[obj.parentId];\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, rotatePoint } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        this.clipboardData = {};\n        this.connectorsTable = [];\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) {\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection && element instanceof TextElement) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        children = children.concat(obj.children);\n        if (this.clipboardData.childTable) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = this.clipboardData.childTable[children[i]];\n                if (childObj) {\n                    var newObj = void 0;\n                    if (getObjectType(childObj) === Connector) {\n                        newObj = this.cloneConnector(childObj, multiSelect);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect);\n                    }\n                    newChildren.push(newObj.id);\n                }\n            }\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj) {\n        obj.id += randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n            }\n        }\n    };\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                }\n                this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, pivot, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n            }\n            else {\n                this.scaleObject(sw, sh, pivot, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent) {\n        var temp = node;\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return nodes;\n    };\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n            var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n            var refPoint = { x: x + refWrapper.actualSize.width * pivot.x, y: y + refWrapper.actualSize.height * pivot.y };\n            refPoint = rotatePoint(refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, refPoint);\n            rotateMatrix(matrix, -refWrapper.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, refPoint.x, refPoint.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        width: node.width, height: node.height, offsetX: node.offsetX,\n                        offsetY: node.offsetY, margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                    });\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            intersectingOffset = intersetingPts[intersetingPts.length - 1];\n            newOffset = intersectingOffset;\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size);\n        }\n    };\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (target.isExpanded) {\n                this.expandCollapse(target, visibility, diagram);\n            }\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            target.visible = visibility;\n            target.style.opacity = (this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            diagram.nodePropertyChange(target, oldValues, newValues);\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = quad.objects.indexOf(node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.preventScale = false;\n        _this.renderTimer = null;\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        this.initCommands();\n        this.isLoading = false;\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        this.drag(obj, tx, ty);\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            this.triggerEvent(DiagramEvent.collectionChange, args);\n            var activeLayer = void 0;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    //  newObj.processId = (obj as Node).processId;\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0) {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        this.triggerEvent(DiagramEvent.collectionChange, args);\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                parentNode.children.push(id);\n                parentNode.wrapper.children.push(this.nameTable[id].wrapper);\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    bounds.width = Math.max(bounds.width, 50);\n                    x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                    y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            var canvas = obj.wrapper;\n            canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof TextElement) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n    };\n    Diagram.prototype.initData = function () {\n        if (this.dataBindingModule) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    var getDefaults = getFunction(this.getNodeDefaults);\n                    if (getDefaults) {\n                        var defaults = getDefaults(obj, this);\n                        if (defaults && defaults !== obj) {\n                            extendObject(defaults, obj);\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            if (independentObj) {\n                var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n                if (!checkBoundaryConstraints) {\n                    var node = obj instanceof Node ? this.nodes : this.connectors;\n                    for (var i = 0; i <= node.length; i++) {\n                        if (node[i] && obj.id === node[i].id) {\n                            node.splice(i, 1);\n                        }\n                    }\n                }\n                layer.zIndexTable[obj.zIndex] = obj.id;\n            }\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.scale(obj, sw, sh, { x: 0, y: 1 });\n        this.drag(obj, groupOffsetX - obj.offsetX, groupOffsetY - obj.offsetY);\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!this.preventScale) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.preventScale = true;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.preventScale = false;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.preventScale = true;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.preventScale = false;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            for (var i = 0; i < obj.children.length; i++) {\n                if (this.nameTable[obj.children[i]]) {\n                    canvas.children.push(this.nameTable[obj.children[i]].wrapper);\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            canvas.children.push(portContainer);\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        canvas.arrange(canvas.desiredSize);\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var htmlLayer = getHTMLLayer(this.element.id);\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers();\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.views[temp];\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if (!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var container = document.getElementById(view.element.id);\n        var bounds = container.getBoundingClientRect();\n        var node;\n        var element;\n        var connector;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            element = this.basicElements[i];\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n        }\n        this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform) {\n        if (transform === void 0) { transform = true; }\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            for (var _b = 0, _c = Object.keys(layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var element = this.nameTable[layer.zIndexTable[node]].wrapper;\n                if (!(this.nameTable[layer.zIndexTable[node]].parentId)\n                    && !(this.nameTable[layer.zIndexTable[node]].processId)) {\n                    renderer.renderElement(element, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? this.scroller.transform : undefined);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width;\n        height = view.contentHeight || view.diagramLayer.height;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            diagramLayer.setAttribute('width', (factor * width).toString());\n            diagramLayer.setAttribute('height', (factor * height).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG') {\n                this.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]));\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]));\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_1 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_1.children) {\n                        for (var _i = 0, _a = parent_1.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.width, true);\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.height, false);\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (this.mode === 'SVG' && !this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, newProp, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || canOutConnect(sourceNode)) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                if (!targetNode || canInConnect(targetNode)) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        }\n        //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction))) {\n            this.updateSelector();\n        }\n        if (this.mode === 'SVG' && !this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            if (changedObject.content !== undefined) {\n                if (annotationWrapper) {\n                    isMeasure = true;\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            annotationWrapper.refreshTextElement();\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            newObj.id += randomId();\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                _this['enterObject'] = newObj;\n                                _this['enterTable'] = entryTable;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                delete _this['enterObject'];\n                                delete _this['enterTable'];\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    _this.add(clonedObject, true);\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width;\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height;\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = this.intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.intersect2 = function (start1, end1, start2, end2) {\n        var point = { x: 0, y: 0 };\n        var lineUtil1 = this.getLineSegment(start1.x, start1.y, end1.x, end1.y);\n        var lineUtil2 = this.getLineSegment(start2.x, start2.y, end2.x, end2.y);\n        var line3 = intersect3(lineUtil1, lineUtil2);\n        if (line3.enabled) {\n            return line3.intersectPt;\n        }\n        else {\n            return point;\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.getLineSegment = function (x1, y1, x2, y2) {\n        return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = (shape instanceof TextElement) ? getBounds(shape) : getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.nestedBestRanks[j][cell.temp[0]] = cell;\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType } from '../diagram/utility/diagram-util';\nimport { getFunction } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.symbolTable = {};\n        _this.childTable = {};\n        _this.info = 'info';\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","bottomLeft","middleLeft","topRight","bottomCenter","middleRight","bottomRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","isTarget","reverse","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canOutConnect","OutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","PortConstraints","Draw","canDrag","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","completeRegion","region","selectedObjects","containsRect","findObjectType","drawingObject","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","k","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","nameTable","isPointOverConnector","intermediatePoints","rect","Rect","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","annotations","container","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","index","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","cloneObject","getCustomProperty","selectedItems","nodes","connectors","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","_a","commandManager","name","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","Object","keys","fill","StrokeStyle","textOverflow","opacity","strokeColor","strokeDashArray","strokeWidth","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","actualObject","minHeight","maxHeight","minWidth","maxWidth","horizontalAlignment","verticalAlignment","visible","Text","elementId","updateShape","oldObject","DiagramElement","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","basicShapeData","removeItem","array","item","indexOf","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","action","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","measure","arrange","desiredSize","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","enterObject","enterTable","symbolPalette","palettes","symbols","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","text","textValue","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getAdornerLayerSvg","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","getNativeLayer","getHTMLLayer","elementType","attribute","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","parent","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","attributes","createMeasureElements","usageCount","divElement","createTextNode","tSpan","randomId","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","currentSymbol","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkForResizeHandles","PointPort","findPortToolToActivate","isSelected","conn","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","padding","firstLevel","parentId","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","DiagramEvent","isDirt","Self","Parent","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","textNodes","textWrapBounds","imageSource","stretch","Canvas","leftMargin","topMargin","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","bridges","bpmnElement","getSegmentElement","getConnectorPoints","flow","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","pathseqData","pathseq","findPath","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","Default","CollectionFactory","UserHandle","getWrapper","All","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","processId","outEdges","inEdges","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderColor","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","initAnnotationWrapper","portContent","pathdata","label","annotationcontent","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","trans","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getObjectType","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","drawImage","ctx_1","imageObj","onload","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","parentSvg","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","w","h","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","entry","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","grid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","commandHandler","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","undoElement","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","updateSize","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","clearSelection","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","redoObject","undoObject","category","addHistoryEntry","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","selectedObject","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","dropAnnotation","endGroupAction","changeObjectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","findObjectsUnderMouse","findObjectUnderMouse","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","setInterval","doAutoScroll","detail","which","isMultipleSelect","renderSelector","click","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","i_1","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","actions","actualTarget","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","zIndex","_d","_e","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","updateDiagramObject","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","getAnnotation","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","UndoRedo","deleteChild","addChild","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","newObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","childObj","prop","initObject","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","select","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","objectId","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","diagramRenderer","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","drag","nodePropertyChange","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","parent_1","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","nodes_1","scaleObject","updateGroupOffset","isResize","refWrapper","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","updateLabelMargin","tempPt","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","line3","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","undoObj","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","DiagramScroller","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","preventScale","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","_f","_g","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","localeObj","L10n","locale","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","requiredModules","modules","member","show","dataManager","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Clear","deleteGroup","removeBpmnProcesses","updateNodeEdges","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","labels","removelabelExtension","element_1","removeLabels","removePortsExtenion","removePorts","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","dataSource","url","initSource","independentObj","currentLayer","defaultLayer","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","groupOffsetX","groupOffsetY","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","portContainer","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","adornerSvg","highlighter","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","isLayout","existingBounds","updateMargin","updateBPMN","actualPort","updatePort","checkSelectedItem","updateTextAnnotationProp","updateConnectorEdges","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","annotationWrapper","updateAnnotations","updateNodeProperty","selItems","canUpdateSize","isMeasure","portWrapper","String","iconRect","iconShape","enable","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","findChild","addChildNodes","out","dragLeave","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","StackPanel","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","then","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","child1","child2","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","self","zOrder","inter1","intersect2","checkForHorizontalLine","roundedAngle","start1","end1","start2","end2","getLineSegment","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","line1","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","addObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","rows","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","columns","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","cell","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","header","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","initSymbols","symbolGroup","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","addPaletteItem","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","stackPanel","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","symbolWidth","symbolHeight","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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ACDplE,EAAQqW,UAAW,gBAAa,IACnCW,IACIouD,WACDplE,EAAQqW,UAAW,gBAAa,IACnCW,IACIouD,WACDplE,EAAQqW,UAAW,eAAY,IAClCW,IACIouD,WACDplE,EAAQqW,UAAW,YAAS,IAC/BW,IACIouD,WACDplE,EAAQqW,UAAW,oBAAiB,IACvCW,IACIouD,WACDplE,EAAQqW,UAAW,kBAAe,IACrCW,IACIouD,WACDplE,EAAQqW,UAAW,eAAY,IAClCW,IACIouD,WACDplE,EAAQqW,UAAW,mBAAgB,IACtCW,IACIouD,WACDplE,EAAQqW,UAAW,sBAAmB,IACzCW,IACIouD,WACDplE,EAAQqW,UAAW,iBAAc,IACpCW,IACIouD,WACDplE,EAAQqW,UAAW,uBAAoB,IAC1CW,IACIouD,WACDplE,EAAQqW,UAAW,wBAAqB,IAC3CW,IACIouD,WACDplE,EAAQqW,UAAW,wBAAqB,IAC3CW,IACIouD,WACDplE,EAAQqW,UAAW,qBAAkB,IACxCW,IACIouD,WACDplE,EAAQqW,UAAW,qBAAkB,IACxCW,IACIouD,WACDplE,EAAQqW,UAAW,wBAAqB,IAC3CW,IACIouD,WACDplE,EAAQqW,UAAW,mBAAgB,IACtCW,IACIouD,WACDplE,EAAQqW,UAAW,uBAAoB,IAC1CW,IACIouD,WACDplE,EAAQqW,UAAW,cAAW,IACjCW,IACIouD,WACDplE,EAAQqW,UAAW,iBAAc,IACpCW,IACIouD,WACDplE,EAAQqW,UAAW,iBAAc,IACpCW,IACIouD,WACDplE,EAAQqW,UAAW,gBAAa,IACnCW,IACIouD,WACDplE,EAAQqW,UAAW,sBAAmB,IACzCW,IACIouD,WACDplE,EAAQqW,UAAW,uBAAoB,IAC1CW,IACI0D,gBAAei8B,KAChB32C,EAAQqW,UAAW,aAAU,IAChCW,IACIouD,WACDplE,EAAQqW,UAAW,WAAQ,IACvBrW,GACT2sB,aC3tJE04C,GAAgC,WAChC,QAASA,GAAetqF,GACpBc,KAAKd,QAAUA,EA8kBnB,MAxkBAsqF,GAAehvD,UAAUsiD,cAAgB,SAAU5uD,GAC/C,GAAIu7D,G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"}