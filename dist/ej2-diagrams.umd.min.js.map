{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/interaction/selector.js","../src/diagram/core/elements/html-element.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix } from '../primitives/matrix';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription) {\n        annotation.id = annotation.id || randomId();\n        var textele = new TextElement();\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.content = annotation.content;\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        textele.style.textOverflow = 'Wrap';\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        textElement.refreshTextElement();\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return nodes[i];\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = { x: x + element.actualSize.width / 2, y: y - 30 / diagram.scroller.currentZoom };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds, randomId } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        this.isRectElement = false;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        this.float = false;\n        this.floatingBounds = undefined;\n        this.id = randomId();\n    }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        //Private variables\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        get: function () {\n            return this.pathData;\n        },\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        _this.nodeId = '';\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the native element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'white', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        get: function () {\n            return this.textContent;\n        },\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        get: function () {\n            return this.textNodes;\n        },\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        get: function () {\n            return this.textWrapBounds;\n        },\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        get: function () {\n            return this.imageSource;\n        },\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    if (child.rotateAngle !== 0) {\n                        childSize = rotateSize(childSize, child.rotateAngle);\n                    }\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY, childSize);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                child.arrange(child.desiredSize);\n                this.outerBounds.uniteRect(child.outerBounds);\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y, childSize) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= childSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= childSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= childSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= childSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        _this.nodeId = '';\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content = new DiagramElement();\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if (this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = this.children ? new Container() : new Canvas();\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent = new TextElement();\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        var style = annotation.style;\n        var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n        annotationcontent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n            bold: style.bold, textWrapping: style.textWrapping,\n            color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n            fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n            textDecoration: link ? link.textDecoration || annotationcontent.hyperlink.textDecoration : style.textDecoration,\n        };\n        annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n        annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n        annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n        annotationcontent.content = link ? link.content || annotationcontent.hyperlink.link : annotation.content;\n        if (this.width !== undefined) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.offset = 0;\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.drawImage = function (canvas, obj) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX = obj.x + obj.width * obj.pivotX;\n            var pivotY = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            imageObj.onload = function () {\n                ctx_1.rotate(obj.angle * Math.PI / 180);\n                var image = new Image();\n                image.src = obj.source;\n                _this.image(ctx_1, image, obj.x, obj.y, obj.width, obj.height, obj);\n                ctx_1.rotate(-(obj.angle * Math.PI / 180));\n            };\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + element.parentTransform + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) {\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                canvas.appendChild(gElement);\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (nodeWidth >= 40 && nodeHeight >= 40) {\n            //Hide corners when the size is less than 40\n            if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n            }\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeWest) {\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeEast) {\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n        }\n    };\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            defs.appendChild(pattern);\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = 'transparent';\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg);\n    };\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true);\n            }\n        }\n    };\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, diff.x, diff.y, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && canOutConnect(args.target))\n                    || (this.endPoint === 'ConnectorTargetEnd' && canInConnect(args.target)))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    this.commandHandler.connect(this.endPoint, args);\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            if (obj.offsetX !== this.undoElement.offsetX || obj.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', changeObjectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            if (args.source instanceof Node) {\n                if (args.source.offsetX === this.undoElement.nodes[0].offsetX &&\n                    args.source.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(args.source.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(args.source.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (args.source.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                args.source.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (args.source) {\n            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n        }\n        var arg = {\n            source: args.source, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (args.source) {\n                oldValues_1 = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                newValues = {\n                    offsetX: args.source.wrapper.offsetX + snappedPoint.x,\n                    offsetY: args.source.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: args.source, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drawHighlighter(this.currentTarget);\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    RotateTool.prototype.mouseUp = function (args) {\n        if (this.undoElement.rotateAngle !== args.source.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.rotateAngle === args.source.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: this.currentElement.wrapper.offsetX, y: this.currentElement.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - this.currentElement.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        if (this.undoElement.offsetX !== args.source.wrapper.offsetX || this.undoElement.offsetY !== args.source.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, args.source);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.offsetX === args.source.wrapper.offsetX && this.undoElement.offsetY === args.source.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, args.source));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            changeObjectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            this.eventArgs.sourceWrapper instanceof TextElement) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target)) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        //end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === \"nudgeRight\" || i === \"nudgeDown\" || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element) {\n                                    if (obj instanceof Connector && diagram.bpmnModule) {\n                                        //    obj = diagram.bpmnModule.findInteractableObject(obj, diagram);\n                                    }\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canOutConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canInConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (actualTarget.parentId) {\n                    var obj = actualTarget;\n                    var selected = isSelected(diagram, obj);\n                    while (obj) {\n                        if (isSelected(diagram, obj) && !selected) {\n                            break;\n                        }\n                        actualTarget = obj;\n                        obj = diagram.nameTable[obj.parentId];\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, rotatePoint } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        this.clipboardData = {};\n        this.connectorsTable = [];\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) {\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection && element instanceof TextElement) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        children = children.concat(obj.children);\n        if (this.clipboardData.childTable) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = this.clipboardData.childTable[children[i]];\n                if (childObj) {\n                    var newObj = void 0;\n                    if (getObjectType(childObj) === Connector) {\n                        newObj = this.cloneConnector(childObj, multiSelect);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect);\n                    }\n                    newChildren.push(newObj.id);\n                }\n            }\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj) {\n        obj.id += randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n            }\n        }\n    };\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                }\n                this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, pivot, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n            }\n            else {\n                this.scaleObject(sw, sh, pivot, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent) {\n        var temp = node;\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return nodes;\n    };\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n            var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n            var refPoint = { x: x + refWrapper.actualSize.width * pivot.x, y: y + refWrapper.actualSize.height * pivot.y };\n            refPoint = rotatePoint(refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, refPoint);\n            rotateMatrix(matrix, -refWrapper.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, refPoint.x, refPoint.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        width: node.width, height: node.height, offsetX: node.offsetX,\n                        offsetY: node.offsetY, margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                    });\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            intersectingOffset = intersetingPts[intersetingPts.length - 1];\n            newOffset = intersectingOffset;\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size);\n        }\n    };\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (target.isExpanded) {\n                this.expandCollapse(target, visibility, diagram);\n            }\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            target.visible = visibility;\n            target.style.opacity = (this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            diagram.nodePropertyChange(target, oldValues, newValues);\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = quad.objects.indexOf(node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.preventScale = false;\n        _this.renderTimer = null;\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        this.initCommands();\n        this.isLoading = false;\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        this.drag(obj, tx, ty);\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            this.triggerEvent(DiagramEvent.collectionChange, args);\n            var activeLayer = void 0;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    //  newObj.processId = (obj as Node).processId;\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0) {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        this.triggerEvent(DiagramEvent.collectionChange, args);\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                parentNode.children.push(id);\n                parentNode.wrapper.children.push(this.nameTable[id].wrapper);\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    bounds.width = Math.max(bounds.width, 50);\n                    x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                    y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            var canvas = obj.wrapper;\n            canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof TextElement) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n    };\n    Diagram.prototype.initData = function () {\n        if (this.dataBindingModule) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    var getDefaults = getFunction(this.getNodeDefaults);\n                    if (getDefaults) {\n                        var defaults = getDefaults(obj, this);\n                        if (defaults && defaults !== obj) {\n                            extendObject(defaults, obj);\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            if (independentObj) {\n                var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n                if (!checkBoundaryConstraints) {\n                    var node = obj instanceof Node ? this.nodes : this.connectors;\n                    for (var i = 0; i <= node.length; i++) {\n                        if (node[i] && obj.id === node[i].id) {\n                            node.splice(i, 1);\n                        }\n                    }\n                }\n                layer.zIndexTable[obj.zIndex] = obj.id;\n            }\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.scale(obj, sw, sh, { x: 0, y: 1 });\n        this.drag(obj, groupOffsetX - obj.offsetX, groupOffsetY - obj.offsetY);\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!this.preventScale) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.preventScale = true;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.preventScale = false;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.preventScale = true;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.preventScale = false;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            for (var i = 0; i < obj.children.length; i++) {\n                if (this.nameTable[obj.children[i]]) {\n                    canvas.children.push(this.nameTable[obj.children[i]].wrapper);\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            canvas.children.push(portContainer);\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        canvas.arrange(canvas.desiredSize);\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var htmlLayer = getHTMLLayer(this.element.id);\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers();\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.views[temp];\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if (!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var container = document.getElementById(view.element.id);\n        var bounds = container.getBoundingClientRect();\n        var node;\n        var element;\n        var connector;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            element = this.basicElements[i];\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n        }\n        this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform) {\n        if (transform === void 0) { transform = true; }\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            for (var _b = 0, _c = Object.keys(layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var element = this.nameTable[layer.zIndexTable[node]].wrapper;\n                if (!(this.nameTable[layer.zIndexTable[node]].parentId)\n                    && !(this.nameTable[layer.zIndexTable[node]].processId)) {\n                    renderer.renderElement(element, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? this.scroller.transform : undefined);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width;\n        height = view.contentHeight || view.diagramLayer.height;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            diagramLayer.setAttribute('width', (factor * width).toString());\n            diagramLayer.setAttribute('height', (factor * height).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG') {\n                this.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]));\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]));\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_1 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_1.children) {\n                        for (var _i = 0, _a = parent_1.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.width, true);\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.height, false);\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (this.mode === 'SVG' && !this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, newProp, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || canOutConnect(sourceNode)) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                if (!targetNode || canInConnect(targetNode)) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        }\n        //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction))) {\n            this.updateSelector();\n        }\n        if (this.mode === 'SVG' && !this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            if (changedObject.content !== undefined) {\n                if (annotationWrapper) {\n                    isMeasure = true;\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            annotationWrapper.refreshTextElement();\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            newObj.id += randomId();\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                _this['enterObject'] = newObj;\n                                _this['enterTable'] = entryTable;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                delete _this['enterObject'];\n                                delete _this['enterTable'];\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    _this.add(clonedObject, true);\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width;\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height;\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = this.intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.intersect2 = function (start1, end1, start2, end2) {\n        var point = { x: 0, y: 0 };\n        var lineUtil1 = this.getLineSegment(start1.x, start1.y, end1.x, end1.y);\n        var lineUtil2 = this.getLineSegment(start2.x, start2.y, end2.x, end2.y);\n        var line3 = intersect3(lineUtil1, lineUtil2);\n        if (line3.enabled) {\n            return line3.intersectPt;\n        }\n        else {\n            return point;\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.getLineSegment = function (x1, y1, x2, y2) {\n        return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = (shape instanceof TextElement) ? getBounds(shape) : getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.nestedBestRanks[j][cell.temp[0]] = cell;\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType } from '../diagram/utility/diagram-util';\nimport { getFunction } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.symbolTable = {};\n        _this.childTable = {};\n        _this.info = 'info';\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","topRight","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canOutConnect","OutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","DiagramConstraints","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","PortConstraints","Draw","canDrag","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","completeRegion","region","selectedObjects","containsRect","findObjectType","drawingObject","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","nameTable","isPointOverConnector","intermediatePoints","k","bezierPoint1","bezierPoint2","pointsForBezier","rect","Rect","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","annotations","container","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","index","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","cloneObject","getCustomProperty","selectedItems","nodes","connectors","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","_a","commandManager","name","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","Object","keys","fill","StrokeStyle","textOverflow","opacity","strokeColor","strokeDashArray","strokeWidth","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","actualObject","minHeight","maxHeight","minWidth","maxWidth","horizontalAlignment","verticalAlignment","visible","Text","elementId","updateShape","oldObject","DiagramElement","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","basicShapeData","removeItem","array","item","indexOf","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","action","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","measure","arrange","desiredSize","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","enterObject","enterTable","findSegmentPoints","sample","sampleLength","measureElement","window","pathNode","getChildNode","setAttributeNS","bBox","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","measurePath","setAttribute","getBBox","svgBounds","wrapSvgText","text","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getAdornerLayerSvg","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","parentNode","getBackgroundLayer","getHTMLLayer","elementType","attribute","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","parent","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","attributes","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","randomId","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","currentSymbol","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkForResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","padding","firstLevel","parentId","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","DiagramEvent","contextMenuClick","contextMenuOpen","isDirt","Self","Parent","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","textNodes","textWrapBounds","imageSource","stretch","measureImage","Canvas","leftMargin","topMargin","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","bridges","bpmnElement","getSegmentElement","getConnectorPoints","flow","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","pathseqData","pathseq","findPath","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","Default","CollectionFactory","UserHandle","getWrapper","All","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","processId","outEdges","inEdges","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderColor","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","initAnnotationWrapper","portContent","pathdata","label","annotationcontent","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","trans","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getObjectType","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","drawImage","ctx_1","imageObj","onload","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","parentSvg","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","w","h","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","grid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","commandHandler","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","undoElement","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","updateSize","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","clearSelection","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","entry","redoObject","undoObject","category","addHistoryEntry","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","selectedObject","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","dropAnnotation","endGroupAction","changeObjectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","findObjectsUnderMouse","findObjectUnderMouse","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","setInterval","doAutoScroll","detail","which","isMultipleSelect","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","i_1","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","actions","actualTarget","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","zIndex","_d","_e","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","updateDiagramObject","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","getAnnotation","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","UndoRedo","deleteChild","addChild","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","newObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","childObj","prop","initObject","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","select","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","objectId","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","diagramRenderer","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","drag","nodePropertyChange","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","parent_1","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","nodes_1","scaleObject","updateGroupOffset","isResize","refWrapper","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","updateLabelMargin","tempPt","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","line3","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","undoObj","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","DiagramScroller","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","preventScale","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","_f","_g","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","localeObj","L10n","locale","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","requiredModules","modules","member","show","dataManager","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","deleteGroup","removeBpmnProcesses","updateNodeEdges","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","ReadOnly","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","labels","removelabelExtension","element_1","removeLabels","removePortsExtenion","removePorts","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","dataSource","url","initSource","independentObj","currentLayer","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","groupOffsetX","groupOffsetY","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","portContainer","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","adornerSvg","highlighter","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","isLayout","existingBounds","updateMargin","updateBPMN","actualPort","updatePort","checkSelectedItem","updateTextAnnotationProp","updateConnectorEdges","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","annotationWrapper","updateAnnotations","updateNodeProperty","selItems","canUpdateSize","isMeasure","portWrapper","String","iconRect","iconShape","enable","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","findChild","addChildNodes","out","dragLeave","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","StackPanel","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","then","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","child1","child2","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","self","zOrder","inter1","intersect2","checkForHorizontalLine","roundedAngle","start1","end1","start2","end2","getLineSegment","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","line1","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","addObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","rows","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","columns","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","cell","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","header","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","measureElemnt","initSymbols","symbolGroup","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","addPaletteItem","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","stackPanel","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","symbolWidth","symbolHeight","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","getNativeLayer","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}